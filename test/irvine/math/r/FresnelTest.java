package irvine.math.r;

import static irvine.TestUtils.assertEqualsLocal;
import junit.framework.TestCase;

/**
 * Tests the corresponding class.
 *
 * @author Sean A. Irvine
 */
public class FresnelTest extends TestCase {

  public void testS() {
    assertEquals(0.0, Fresnel.s(0.0), 1.0E-12);
    assertEqualsLocal(Double.NaN, Fresnel.s(Double.NaN), 0.0);
    assertEquals(0.5, Fresnel.s(Double.POSITIVE_INFINITY), 1.0E-12);
    assertEquals(-0.5, Fresnel.s(Double.NEGATIVE_INFINITY), 1.0E-12);
    assertEquals(0.5, Fresnel.s(Double.MAX_VALUE), 1.0E-12);
    assertEquals(0.00052358954761221059948506997307, Fresnel.s(0.1), 1.0E-12);
    assertEquals(0.00418760916165676163102199650955, Fresnel.s(0.2), 1.0E-12);
    assertEquals(0.0141169980065765858073185662125, Fresnel.s(0.3), 1.0E-12);
    assertEquals(0.0333594326606131803940766373796, Fresnel.s(0.4), 1.0E-12);
    assertEquals(0.064732432859999277611480511282, Fresnel.s(0.5), 1.0E-12);
    assertEquals(0.110540207359386961332333116607, Fresnel.s(0.6), 1.0E-12);
    assertEquals(0.172136457863477453355892084090, Fresnel.s(0.7), 1.0E-12);
    assertEquals(0.249341393053917783731589136234, Fresnel.s(0.8), 1.0E-12);
    assertEquals(0.339776344393140214654866736743, Fresnel.s(0.9), 1.0E-12);
    assertEquals(0.438259147390354766076756682160, Fresnel.s(1.0), 1.0E-12);
    assertEquals(0.53649791109682043483459765043, Fresnel.s(1.1), 1.0E-12);
    assertEquals(0.62340091854624967227465994413, Fresnel.s(1.2), 1.0E-12);
    assertEquals(0.68633328553465011378455519199, Fresnel.s(1.3), 1.0E-12);
    assertEquals(0.71352507736341211295551994311, Fresnel.s(1.4), 1.0E-12);
    assertEquals(0.69750496008209301308065519401, Fresnel.s(1.5), 1.0E-12);
    assertEquals(0.374273359378103696058683382719, Fresnel.s(2.1), 1.0E-12);
    assertEquals(0.455704612124656892844183128124, Fresnel.s(2.2), 1.0E-12);
    assertEquals(0.55315164156070212328899722575, Fresnel.s(2.3), 1.0E-12);
    assertEquals(0.61968996494568358267171883732, Fresnel.s(2.4), 1.0E-12);
    assertEquals(0.61918175581959293611357632511, Fresnel.s(2.5), 1.0E-12);
    assertEquals(0.54998932315271946901276689933, Fresnel.s(2.6), 1.0E-12);
    assertEquals(0.452917487616719207547889461936, Fresnel.s(2.7), 1.0E-12);
    assertEquals(0.391528443543171818521763881633, Fresnel.s(2.8), 1.0E-12);
    assertEquals(0.410140587056713657003355476264, Fresnel.s(2.9), 1.0E-12);
    assertEquals(0.496312998967375036097612039727, Fresnel.s(3.0), 1.0E-12);
    assertEquals(0.420515754246928424445343185784, Fresnel.s(4.0), 1.0E-12);
    assertEquals(0.475798257032828314286384249080, Fresnel.s(4.1), 1.0E-12);
    assertEquals(0.56319888839661130347762083562, Fresnel.s(4.2), 1.0E-12);
    assertEquals(0.55399588766657779814822171063, Fresnel.s(4.3), 1.0E-12);
    assertEquals(0.462268016411044804488939424848, Fresnel.s(4.4), 1.0E-12);
    assertEquals(0.434272975048703589471915823443, Fresnel.s(4.5), 1.0E-12);
    assertEquals(0.51619233694905494916367813815, Fresnel.s(4.6), 1.0E-12);
    assertEquals(0.56714546901226300541282848959, Fresnel.s(4.7), 1.0E-12);
    assertEquals(0.496750218958946910626778436588, Fresnel.s(4.8), 1.0E-12);
    assertEquals(0.435067361787493697590747128391, Fresnel.s(4.9), 1.0E-12);
    assertEquals(0.51633069150415376582218150566, Fresnel.s(5.9), 1.0E-12);
    assertEquals(0.446960761236930277623920324148, Fresnel.s(6.0), 1.0E-12);
    assertEquals(0.51647708279510401107774828638, Fresnel.s(6.1), 1.0E-12);
    assertEquals(0.53982097881694068350658585823, Fresnel.s(6.2), 1.0E-12);
    assertEquals(0.455545430504398412683419976313, Fresnel.s(6.3), 1.0E-12);
    assertEquals(0.496492221545942400715201200603, Fresnel.s(6.4), 1.0E-12);
    assertEquals(0.54537645524323358023302723146, Fresnel.s(6.5), 1.0E-12);
    assertEquals(0.463069501140455223662482803248, Fresnel.s(6.6), 1.0E-12);
    assertEquals(0.491501446345086065031568736247, Fresnel.s(6.7), 1.0E-12);
    assertEquals(0.54363545682350555621326494121, Fresnel.s(6.8), 1.0E-12);
    assertEquals(0.462439507778596194612905151236, Fresnel.s(6.9), 1.0E-12);
    assertEquals(0.499704789453446775868281373891, Fresnel.s(7.0), 1.0E-12);
    assertEquals(0.53601735451077927516113402944, Fresnel.s(7.1), 1.0E-12);
    assertEquals(0.457251530582879903635818675274, Fresnel.s(7.2), 1.0E-12);
    assertEquals(0.51894732785814445020457767329, Fresnel.s(7.3), 1.0E-12);
    assertEquals(0.465341248981074507142480945623, Fresnel.s(8.5), 1.0E-12);
    assertEquals(0.53692769034508361291512322164, Fresnel.s(8.6), 1.0E-12);
    assertEquals(0.467739057456668754877762711116, Fresnel.s(8.7), 1.0E-12);
    assertEquals(0.52294093275877771375161692728, Fresnel.s(8.8), 1.0E-12);
    assertEquals(0.488551546582345894524834628995, Fresnel.s(8.9), 1.0E-12);
    assertEquals(0.499861045629684929861703335559, Fresnel.s(9.0), 1.0E-12);
    assertEquals(0.51041329516968070828658421402, Fresnel.s(9.1), 1.0E-12);
    assertEquals(0.481351929338446456830995818890, Fresnel.s(9.2), 1.0E-12);
    assertEquals(0.52466585995281879461205084353, Fresnel.s(9.3), 1.0E-12);
    assertEquals(0.471344492246875961306827903094, Fresnel.s(9.4), 1.0E-12);
    assertEquals(0.53099984915139829533117932051, Fresnel.s(9.5), 1.0E-12);
    assertEquals(0.467857090761817450555263474895, Fresnel.s(9.6), 1.0E-12);
    assertEquals(0.53250259856426540385305299527, Fresnel.s(9.7), 1.0E-12);
    assertEquals(0.467577801869664397041093725915, Fresnel.s(9.8), 1.0E-12);
    assertEquals(0.53214917021179084944759823445, Fresnel.s(9.9), 1.0E-12);
    assertEquals(0.468169978584882240403351147454, Fresnel.s(10.0), 1.0E-12);
    assertEquals(0.53151256657876367189882422702, Fresnel.s(10.1), 1.0E-12);
    assertEquals(0.468849608104531221211997503536, Fresnel.s(10.2), 1.0E-12);
    assertEquals(0.51754095565565508482596923823, Fresnel.s(11.6), 1.0E-12);
    assertEquals(0.495260262470896645148511479519, Fresnel.s(11.7), 1.0E-12);
    assertEquals(0.490127175636785252717028597642, Fresnel.s(11.8), 1.0E-12);
    assertEquals(0.52184956426284718305617109271, Fresnel.s(11.9), 1.0E-12);
    assertEquals(0.473474564919935447932481385205, Fresnel.s(12.0), 1.0E-12);
    assertEquals(0.52107102540974507068785381629, Fresnel.s(12.1), 1.0E-12);
    assertEquals(0.493457486003898626393039485355, Fresnel.s(12.2), 1.0E-12);
    assertEquals(0.52243698027429954305312150636, Fresnel.s(13.2), 1.0E-12);
    assertEquals(0.495842824350162189602177370525, Fresnel.s(13.3), 1.0E-12);
    assertEquals(0.481723880202812243562635377481, Fresnel.s(13.4), 1.0E-12);
    assertEquals(0.52179926218777673056641193761, Fresnel.s(13.5), 1.0E-12);
    assertEquals(0.498490194056573692012221759279, Fresnel.s(13.6), 1.0E-12);
    assertEquals(0.479484940352221643373353398615, Fresnel.s(13.7), 1.0E-12);
    assertEquals(0.51779703234472802427451113520, Fresnel.s(13.8), 1.0E-12);
    assertEquals(0.50738195402708532838781655633, Fresnel.s(13.9), 1.0E-12);
    assertEquals(0.477263759441820295039423968677, Fresnel.s(14.0), 1.0E-12);
    assertEquals(0.50667250444726127283148419403, Fresnel.s(14.1), 1.0E-12);
    assertEquals(0.51890751279314988992644107994, Fresnel.s(14.2), 1.0E-12);
    assertEquals(0.483990920376870826034216385281, Fresnel.s(14.3), 1.0E-12);
    assertEquals(0.488184360017751134051149469818, Fresnel.s(14.4), 1.0E-12);
    assertEquals(0.52029395715602368583548167616, Fresnel.s(14.5), 1.0E-12);
    assertEquals(0.50539037942758220201671864919, Fresnel.s(14.6), 1.0E-12);
    assertEquals(0.478557936681371215972998704365, Fresnel.s(14.7), 1.0E-12);
    assertEquals(0.498680738203571021884161505450, Fresnel.s(14.8), 1.0E-12);
    assertEquals(0.52136079347254822720294736765, Fresnel.s(14.9), 1.0E-12);
    assertEquals(0.499969979809702743424108910380, Fresnel.s(15.0), 1.0E-12);
    assertEquals(0.496816901147837553271468293094, Fresnel.s(100.0), 1.0E-12);
    assertEquals(0.5, Fresnel.s(36974.00001), 1.0E-12);
    assertEquals(0.5, Fresnel.s(36975), 1.0E-12);
    for (double x = 0.0; x < 15.0; x += 0.03) {
      assertEquals(Fresnel.s(x), -Fresnel.s(-x), 1.0E-15);
    }
  }

  public void testC() {
    assertEquals(0.0, Fresnel.c(0.0), 1.0E-12);
    assertEqualsLocal(Double.NaN, Fresnel.c(Double.NaN), 0.0);
    assertEquals(0.5, Fresnel.c(Double.POSITIVE_INFINITY), 1.0E-12);
    assertEquals(-0.5, Fresnel.c(Double.NEGATIVE_INFINITY), 1.0E-12);
    assertEquals(0.5, Fresnel.c(Double.MAX_VALUE), 1.0E-12);
    assertEquals(0.099997532627085068050466690994, Fresnel.c(0.1), 1.0E-12);
    assertEquals(0.199921057594453085221705462233, Fresnel.c(0.2), 1.0E-12);
    assertEquals(0.299400976052047210381913831837, Fresnel.c(0.3), 1.0E-12);
    assertEquals(0.397480759172359439813165740902, Fresnel.c(0.4), 1.0E-12);
    assertEquals(0.492344225871446392878843665353, Fresnel.c(0.5), 1.0E-12);
    assertEquals(0.58109544699165232707074689344, Fresnel.c(0.6), 1.0E-12);
    assertEquals(0.65965235190451039091616930695, Fresnel.c(0.7), 1.0E-12);
    assertEquals(0.72284417189635611829155356829, Fresnel.c(0.8), 1.0E-12);
    assertEquals(0.76482302127332649986362848067, Fresnel.c(0.9), 1.0E-12);
    assertEquals(0.77989340037682282947420643220, Fresnel.c(1.0), 1.0E-12);
    assertEquals(0.76380666606201199072613001943, Fresnel.c(1.1), 1.0E-12);
    assertEquals(0.71543772292307339595216485027, Fresnel.c(1.2), 1.0E-12);
    assertEquals(0.63855045472702925724795003338, Fresnel.c(1.3), 1.0E-12);
    assertEquals(0.54309578354625638856254146187, Fresnel.c(1.4), 1.0E-12);
    assertEquals(0.445261176039821535064551043539, Fresnel.c(1.5), 1.0E-12);
    assertEquals(0.365461683440487709575001629970, Fresnel.c(1.6), 1.0E-12);
    assertEquals(0.323826876003900253743081741166, Fresnel.c(1.7), 1.0E-12);
    assertEquals(0.333632927221557100670453229065, Fresnel.c(1.8), 1.0E-12);
    assertEquals(0.394470534891522948220387712136, Fresnel.c(1.9), 1.0E-12);
    assertEquals(0.488253406075340754500223317056, Fresnel.c(2.0), 1.0E-12);
    assertEquals(0.58156413506083391417430843875, Fresnel.c(2.1), 1.0E-12);
    assertEquals(0.63628604490331945780793803065, Fresnel.c(2.2), 1.0E-12);
    assertEquals(0.62656170979195210141674211712, Fresnel.c(2.3), 1.0E-12);
    assertEquals(0.55496140585642812795081674012, Fresnel.c(2.4), 1.0E-12);
    assertEquals(0.457413009641777045245656244209, Fresnel.c(2.5), 1.0E-12);
    assertEquals(0.388937496191969027860711716745, Fresnel.c(2.6), 1.0E-12);
    assertEquals(0.392493969852747945266955489813, Fresnel.c(2.7), 1.0E-12);
    assertEquals(0.467491651698905978779252786411, Fresnel.c(2.8), 1.0E-12);
    assertEquals(0.56237645022582395605769838826, Fresnel.c(2.9), 1.0E-12);
    assertEquals(0.60572078929768562955616108293, Fresnel.c(3.0), 1.0E-12);
    assertEquals(0.56159390251135640954507354800, Fresnel.c(3.1), 1.0E-12);
    assertEquals(0.466320346952037449774300345623, Fresnel.c(3.2), 1.0E-12);
    assertEquals(0.405694403706258442181344843301, Fresnel.c(3.3), 1.0E-12);
    assertEquals(0.422332710260933334462868812050, Fresnel.c(3.9), 1.0E-12);
    assertEquals(0.498426033038177615530708499782, Fresnel.c(4.0), 1.0E-12);
    assertEquals(0.57369563145120534150735717565, Fresnel.c(4.1), 1.0E-12);
    assertEquals(0.54171920316341528151747714940, Fresnel.c(4.2), 1.0E-12);
    assertEquals(0.449441171024909021800037558152, Fresnel.c(4.3), 1.0E-12);
    assertEquals(0.438332940837678938523785208471, Fresnel.c(4.4), 1.0E-12);
    assertEquals(0.52602591505353874136960611302, Fresnel.c(4.5), 1.0E-12);
    assertEquals(0.56723668228574762159826129722, Fresnel.c(4.6), 1.0E-12);
    assertEquals(0.491426490601025714055187127619, Fresnel.c(4.7), 1.0E-12);
    assertEquals(0.433796581622996036136957497627, Fresnel.c(4.8), 1.0E-12);
    assertEquals(0.54950220126396531216305210594, Fresnel.c(6.1), 1.0E-12);
    assertEquals(0.467608409763525142902223818150, Fresnel.c(6.2), 1.0E-12);
    assertEquals(0.476004455353068089470106989677, Fresnel.c(6.3), 1.0E-12);
    assertEquals(0.54960455570382427742641144209, Fresnel.c(6.4), 1.0E-12);
    assertEquals(0.481603459890964034555525107647, Fresnel.c(6.5), 1.0E-12);
    assertEquals(0.468991407711793916105750036266, Fresnel.c(6.6), 1.0E-12);
    assertEquals(0.54673657485136972469596110068, Fresnel.c(6.7), 1.0E-12);
    assertEquals(0.483069828033669342539069703878, Fresnel.c(6.8), 1.0E-12);
    assertEquals(0.473225314351513630242803932527, Fresnel.c(6.9), 1.0E-12);
    assertEquals(0.54546709254696981032706905802, Fresnel.c(7.0), 1.0E-12);
    assertEquals(0.473311196696590583185542956519, Fresnel.c(7.1), 1.0E-12);
    assertEquals(0.488743953651618964299192183283, Fresnel.c(7.2), 1.0E-12);
    assertEquals(0.53926801565846240410243450313, Fresnel.c(7.3), 1.0E-12);
    assertEquals(0.52275061255785608233505945479, Fresnel.c(8.1), 1.0E-12);
    assertEquals(0.463842476689327203085243592303, Fresnel.c(8.2), 1.0E-12);
    assertEquals(0.53774664841866152239842816430, Fresnel.c(8.3), 1.0E-12);
    assertEquals(0.470912858992913550943005181936, Fresnel.c(8.4), 1.0E-12);
    assertEquals(0.51417759858373344687722046219, Fresnel.c(8.5), 1.0E-12);
    assertEquals(0.50248286002240200994789674962, Fresnel.c(8.6), 1.0E-12);
    assertEquals(0.482744653672090554368359924273, Fresnel.c(8.7), 1.0E-12);
    assertEquals(0.52796401615121230740840203327, Fresnel.c(8.8), 1.0E-12);
    assertEquals(0.466118204596100088637641664773, Fresnel.c(8.9), 1.0E-12);
    assertEquals(0.53536612746811985255106332409, Fresnel.c(9.0), 1.0E-12);
    assertEquals(0.466608220079834572771052517774, Fresnel.c(9.1), 1.0E-12);
    assertEquals(0.52914187331455602792728800942, Fresnel.c(9.2), 1.0E-12);
    assertEquals(0.476272491672382570361578748489, Fresnel.c(9.3), 1.0E-12);
    assertEquals(0.51804088703209623936159025852, Fresnel.c(9.4), 1.0E-12);
    assertEquals(0.487287331026567163515852374164, Fresnel.c(9.5), 1.0E-12);
    assertEquals(0.50813468155278362679638175797, Fresnel.c(9.6), 1.0E-12);
    assertEquals(0.495486310531390661898139389233, Fresnel.c(9.7), 1.0E-12);
    assertEquals(0.50193198474001923579358678416, Fresnel.c(9.8), 1.0E-12);
    assertEquals(0.499599379488717675571353264473, Fresnel.c(9.9), 1.0E-12);
    assertEquals(0.472846068490317307953309188255, Fresnel.c(11.1), 1.0E-12);
    assertEquals(0.52194393395003782032401780683, Fresnel.c(11.2), 1.0E-12);
    assertEquals(0.486757070204118063779028406755, Fresnel.c(11.3), 1.0E-12);
    assertEquals(0.50182144813012244753356885967, Fresnel.c(11.4), 1.0E-12);
    assertEquals(0.51053061299658130731457701008, Fresnel.c(11.5), 1.0E-12);
    assertEquals(0.478898453630796683518377886253, Fresnel.c(11.6), 1.0E-12);
    assertEquals(0.52678954755926345170120376760, Fresnel.c(11.7), 1.0E-12);
    assertEquals(0.474896588008826229420227588589, Fresnel.c(11.8), 1.0E-12);
    assertEquals(0.51542961511131081601978363789, Fresnel.c(11.9), 1.0E-12);
    assertEquals(0.499941369352011380309991700196, Fresnel.c(12.0), 1.0E-12);
    assertEquals(0.52356906141782871531713197764, Fresnel.c(13.3), 1.0E-12);
    assertEquals(0.484826029424927159094910553840, Fresnel.c(13.4), 1.0E-12);
    assertEquals(0.491015022117615083156270057747, Fresnel.c(13.5), 1.0E-12);
    assertEquals(0.52335621741310313572132048012, Fresnel.c(13.6), 1.0E-12);
    assertEquals(0.489093250672763625448776897479, Fresnel.c(13.7), 1.0E-12);
    assertEquals(0.485327048358258008093796374466, Fresnel.c(13.8), 1.0E-12);
    assertEquals(0.52167739061099534334978181072, Fresnel.c(13.9), 1.0E-12);
    assertEquals(0.499963076830966100451946088604, Fresnel.c(14.0), 1.0E-12);
    assertEquals(0.478433604409115871994129224388, Fresnel.c(14.1), 1.0E-12);
    assertEquals(0.51204098153903094126186760120, Fresnel.c(14.2), 1.0E-12);
    assertEquals(0.51546562986269813007335805497, Fresnel.c(14.3), 1.0E-12);
    assertEquals(0.481318205904046381110851988101, Fresnel.c(14.4), 1.0E-12);
    assertEquals(0.491629939826692107496570527762, Fresnel.c(14.5), 1.0E-12);
    assertEquals(0.52112505061981100230668485608, Fresnel.c(14.6), 1.0E-12);
    assertEquals(0.50301944026109370674256512494, Fresnel.c(14.7), 1.0E-12);
    assertEquals(0.478533188791411500840464823517, Fresnel.c(14.8), 1.0E-12);
    assertEquals(0.499695070284877311934188534450, Fresnel.c(14.9), 1.0E-12);
    assertEquals(0.52122053167437345793460008724, Fresnel.c(15.0), 1.0E-12);
    assertEquals(0.499999898678817897558099362447, Fresnel.c(100.0), 1.0E-12);
    assertEquals(0.5, Fresnel.c(36974.00001), 1.0E-12);
    assertEquals(0.5, Fresnel.c(36975), 1.0E-12);
    for (double x = 0.0; x < 15.0; x += 0.03) {
      assertEquals(Fresnel.c(x), -Fresnel.c(-x), 1.0E-15);
    }
  }

}
