package irvine.math.r;

import static irvine.TestUtils.assertEqualsLocal;
import static irvine.math.r.Airy.airy;
import junit.framework.TestCase;

/**
 * Tests the corresponding class.
 *
 * @author Sean A. Irvine
 */
public class AiryTest extends TestCase {

  private void z(final double x, final double a, final double b, final double c, final double d) {
    final double[] r = airy(x);
    assertEquals(4, r.length);
    if (a == 0 || a == Double.POSITIVE_INFINITY) {
      assertEqualsLocal(a, r[0], 1E-3);
    } else {
      assertEqualsLocal(1, a / r[0], 1E-3);
    }
    if (b == 0 || b == Double.POSITIVE_INFINITY) {
      assertEqualsLocal(b, r[1], 1E-3);
    } else {
      assertEqualsLocal(1, b / r[1], 1E-3);
    }
    if (c == 0 || c == Double.POSITIVE_INFINITY) {
      assertEqualsLocal(c, r[2], 1E-3);
    } else {
      assertEqualsLocal(1, c / r[2], 1E-3);
    }
    if (d == 0 || d == Double.POSITIVE_INFINITY) {
      assertEqualsLocal(d, r[3], 1E-3);
    } else {
      assertEqualsLocal(1, d / r[3], 1E-3);
    }
  }

  private void u(final double x, final double a, final double b, final double c, final double d) {
    z(x, a, c, b, d);
  }

  public void testAiryBig() {
    z(Double.POSITIVE_INFINITY, 0, 0, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
    z(Double.MAX_VALUE, 0, 0, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
    z(103.8920001, 0, 0, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
  }

  public void testAiryNegative() {
    u(-5.00, 0.350761, -0.138369, 0.327193, 0.778412);
    u(-4.98, 0.356952, -0.122668, 0.291872, 0.79144);
    u(-4.96, 0.362433, -0.106723, 0.256113, 0.802843);
    u(-4.94, 0.367195, -0.0905652, 0.219991, 0.812611);
    u(-4.92, 0.371231, -0.0742287, 0.18358, 0.820738);
    u(-4.90, 0.374536, -0.0577467, 0.146958, 0.827219);
    u(-4.88, 0.377108, -0.041151, 0.110196, 0.832057);
    u(-4.86, 0.378944, -0.0244752, 0.0733705, 0.835254);
    u(-4.84, 0.380043, -0.00775198, 0.0365541, 0.836817);
    u(-4.82, 0.380406, 0.0089866, -0.000181828, 0.836758);
    u(-4.80, 0.380037, 0.0257075, -0.0367645, 0.83509);
    u(-4.78, 0.378937, 0.0423794, -0.0731253, 0.831828);
    u(-4.76, 0.377114, 0.0589704, -0.109195, 0.826994);
    u(-4.74, 0.374572, 0.0754492, -0.144906, 0.820608);
    u(-4.72, 0.37132, 0.0917846, -0.180192, 0.812698);
    u(-4.70, 0.367367, 0.107947, -0.214991, 0.803289);
    u(-4.62, 0.344773, 0.170281, -0.348076, 0.751332);
    u(-4.60, 0.337496, 0.185146, -0.379534, 0.734944);
    u(-4.58, 0.329598, 0.19967, -0.410159, 0.717279);
    u(-4.56, 0.321095, 0.213829, -0.4399, 0.69838);
    u(-4.54, 0.312008, 0.227597, -0.468711, 0.678292);
    u(-4.52, 0.302354, 0.240953, -0.496546, 0.657064);
    u(-4.50, 0.292153, 0.253873, -0.523363, 0.634745);
    u(-4.48, 0.281426, 0.266336, -0.54912, 0.611384);
    u(-4.46, 0.270195, 0.278321, -0.573782, 0.587035);
    u(-4.44, 0.258482, 0.289811, -0.597312, 0.56175);
    u(-4.42, 0.246311, 0.300786, -0.619678, 0.535583);
    u(-4.34, 0.193513, 0.339213, -0.696944, 0.423213);
    u(-4.32, 0.17941, 0.347381, -0.713094, 0.393479);
    u(-4.30, 0.164998, 0.354949, -0.727941, 0.363205);
    u(-4.28, 0.150302, 0.361906, -0.74147, 0.332448);
    u(-4.26, 0.135348, 0.368244, -0.753669, 0.301266);
    u(-4.24, 0.120163, 0.373955, -0.76453, 0.269717);
    u(-4.22, 0.104776, 0.379031, -0.774047, 0.237862);
    u(-4.20, 0.0892105, 0.383467, -0.782216, 0.205756);
    u(-4.18, 0.073496, 0.38726, -0.789034, 0.173459);
    u(-4.16, 0.0576582, 0.390405, -0.794505, 0.141026);
    u(-4.14, 0.0417247, 0.3929, -0.79863, 0.108514);
    u(-4.12, 0.025722, 0.394745, -0.801417, 0.0759801);
    u(-4.10, 0.00967685, 0.39594, -0.802873, 0.0434784);
    u(-4.08, -0.00638405, 0.396485, -0.803008, 0.011064);
    u(-4.06, -0.0224347, 0.396383, -0.801835, -0.0212101);
    u(-4.04, -0.0384487, 0.395638, -0.79937, -0.0532911);
    u(-4.02, -0.054401, 0.394253, -0.795628, -0.0851283);
    u(-4.00, -0.0702655, 0.392235, -0.790629, -0.11667);
    u(-3.92, -0.132357, 0.377964, -0.758498, -0.238936);
    u(-3.90, -0.14742, 0.372891, -0.747558, -0.268298);
    u(-3.88, -0.162252, 0.367236, -0.735511, -0.297093);
    u(-3.86, -0.176833, 0.361011, -0.722387, -0.32528);
    u(-3.84, -0.191141, 0.354229, -0.708219, -0.352821);
    u(-3.82, -0.205155, 0.346903, -0.693039, -0.379678);
    u(-3.80, -0.218856, 0.339046, -0.676882, -0.405816);
    u(-3.78, -0.232224, 0.330675, -0.659785, -0.431202);
    u(-3.76, -0.245241, 0.321804, -0.641783, -0.455804);
    u(-3.74, -0.25789, 0.312448, -0.622913, -0.479591);
    u(-3.72, -0.270152, 0.302626, -0.603215, -0.502537);
    u(-3.70, -0.282013, 0.292353, -0.582728, -0.524614);
    u(-3.68, -0.293456, 0.281647, -0.561491, -0.545797);
    u(-3.66, -0.304468, 0.270527, -0.539545, -0.566065);
    u(-3.64, -0.315034, 0.259011, -0.51693, -0.585396);
    u(-3.62, -0.325141, 0.247117, -0.493689, -0.603771);
    u(-3.40, -0.40319, 0.0971062, -0.208749, -0.739202);
    u(-3.38, -0.407091, 0.0822596, -0.181278, -0.745283);
    u(-3.36, -0.410441, 0.0673017, -0.153723, -0.750325);
    u(-3.34, -0.41324, 0.0522535, -0.126127, -0.754331);
    u(-3.32, -0.415486, 0.0371353, -0.0985277, -0.757308);
    u(-3.30, -0.417181, 0.0219679, -0.0709635, -0.759265);
    u(-3.28, -0.418325, 0.00677156, -0.0434725, -0.760211);
    u(-3.26, -0.418921, -0.00843376, -0.0160916, -0.760157);
    u(-3.24, -0.41897, -0.0236282, 0.0111428, -0.759116);
    u(-3.22, -0.418476, -0.0387918, 0.0381951, -0.7571);
    u(-3.20, -0.417443, -0.0539058, 0.0650312, -0.754125);
    u(-2.96, -0.365336, -0.224819, 0.358955, -0.650387);
    u(-2.94, -0.357943, -0.237691, 0.380294, -0.636743);
    u(-2.92, -0.350128, -0.250284, 0.401042, -0.622444);
    u(-2.90, -0.341905, -0.262585, 0.421183, -0.607518);
    u(-2.88, -0.333285, -0.274581, 0.440698, -0.591993);
    u(-2.86, -0.324281, -0.286261, 0.459572, -0.575896);
    u(-2.84, -0.314907, -0.297613, 0.477791, -0.559254);
    u(-2.82, -0.305174, -0.308628, 0.495341, -0.542096);
    u(-2.80, -0.295098, -0.319294, 0.512211, -0.52445);
    u(-2.78, -0.28469, -0.329603, 0.528389, -0.506345);
    u(-2.54, -0.139235, -0.422742, 0.666166, -0.263534);
    u(-2.52, -0.125844, -0.427798, 0.672874, -0.242013);
    u(-2.50, -0.112325, -0.432422, 0.678853, -0.22042);
    u(-2.48, -0.0986943, -0.436615, 0.684108, -0.198779);
    u(-2.46, -0.0849656, -0.440373, 0.688645, -0.177116);
    u(-2.44, -0.0711533, -0.443699, 0.692471, -0.155455);
    u(-2.42, -0.0572714, -0.446592, 0.695592, -0.133819);
    u(-2.40, -0.0433342, -0.449052, 0.698018, -0.112232);
    u(-2.38, -0.0293553, -0.451082, 0.699756, -0.0907175);
    u(-2.36, -0.0153483, -0.452682, 0.700816, -0.0692965);
    u(-2.34, -0.00132709, -0.453854, 0.701208, -0.0479914);
    u(-2.32, 0.0126956, -0.454602, 0.700943, -0.0268227);
    u(-2.30, 0.0267063, -0.454928, 0.700034, -0.00581104);
    u(-2.28, 0.0406927, -0.454836, 0.698491, 0.0150242);
    u(-2.06, 0.189531, -0.427512, 0.643655, 0.227615);
    u(-2.04, 0.202324, -0.422784, 0.635621, 0.245047);
    u(-2.02, 0.214953, -0.417712, 0.627151, 0.262111);
    u(-2.00, 0.227407, -0.412303, 0.618259, 0.278795);
    u(-1.98, 0.23968, -0.406563, 0.608964, 0.295092);
    u(-1.96, 0.251763, -0.400502, 0.599282, 0.310992);
    u(-1.94, 0.263649, -0.394126, 0.589231, 0.326489);
    u(-1.92, 0.27533, -0.387445, 0.578829, 0.341574);
    u(-1.90, 0.2868, -0.380466, 0.568092, 0.356243);
    u(-1.88, 0.298052, -0.373198, 0.557038, 0.370488);
    u(-1.58, 0.437296, -0.235408, 0.364754, 0.531548);
    u(-1.56, 0.444453, -0.224704, 0.35091, 0.538773);
    u(-1.54, 0.451332, -0.21386, 0.337025, 0.545571);
    u(-1.52, 0.457934, -0.202884, 0.323112, 0.551948);
    u(-1.50, 0.464257, -0.191785, 0.309187, 0.557908);
    u(-1.48, 0.470301, -0.180571, 0.295262, 0.563457);
    u(-1.46, 0.476067, -0.169249, 0.281349, 0.5686);
    u(-1.44, 0.481555, -0.157829, 0.267464, 0.573343);
    u(-1.42, 0.486766, -0.146318, 0.253616, 0.577693);
    u(-1.22, 0.523927, -0.0278508, 0.119738, 0.601181);
    u(-1.20, 0.526194, -0.0158214, 0.107032, 0.60171);
    u(-1.18, 0.528209, -0.00378435, 0.0944837, 0.601944);
    u(-1.16, 0.529975, 0.00825452, 0.0821025, 0.601892);
    u(-1.14, 0.531494, 0.0202895, 0.0698952, 0.601564);
    u(-1.12, 0.532772, 0.0323153, 0.0578686, 0.60097);
    u(-1.10, 0.53381, 0.0443266, 0.0460291, 0.60012);
    u(-1.08, 0.534614, 0.0563184, 0.0343829, 0.599023);
    u(-1.06, 0.535187, 0.068286, 0.0229356, 0.59769);
    u(-1.04, 0.535533, 0.0802246, 0.0116927, 0.596131);
    u(-1.02, 0.535656, 0.0921297, 0.000659081, 0.594356);
    u(-1.00, 0.535561, 0.103997, -0.0101606, 0.592376);
    u(-0.74, 0.516493, 0.253315, -0.129843, 0.552609);
    u(-0.72, 0.513821, 0.26433, -0.137365, 0.54883);
    u(-0.70, 0.511, 0.275268, -0.144641, 0.544999);
    u(-0.68, 0.508037, 0.286129, -0.151673, 0.541126);
    u(-0.20, 0.406284, 0.524509, -0.251033, 0.459385);
    u(-0.18, 0.401248, 0.533676, -0.252567, 0.457375);
    u(-0.16, 0.396183, 0.542805, -0.253923, 0.455545);
    u(-0.14, 0.391092, 0.551899, -0.255104, 0.453904);
    u(-0.12, 0.38598, 0.560963, -0.256114, 0.452457);
    u(-0.10, 0.380849, 0.569999, -0.256958, 0.451213);
    u(-0.08, 0.375702, 0.579013, -0.257639, 0.45018);
    u(-0.06, 0.370544, 0.588008, -0.258162, 0.449363);
    u(-0.04, 0.365377, 0.596989, -0.25853, 0.448771);
    u(-0.02, 0.360204, 0.60596, -0.258748, 0.44841);
    u(-0.00, 0.355028, 0.614927, -0.25882, 0.448289);
  }

  public void testAiryPositive() {
    u(0.02, 0.349852, 0.623893, -0.258749, 0.448413);
    u(0.04, 0.344679, 0.632865, -0.258541, 0.44879);
    u(0.06, 0.339511, 0.641847, -0.258199, 0.449428);
    u(0.08, 0.334352, 0.650844, -0.257727, 0.450333);
    u(0.10, 0.329203, 0.659862, -0.25713, 0.451513);
    u(0.12, 0.324068, 0.668906, -0.256412, 0.452975);
    u(0.14, 0.318947, 0.677983, -0.255576, 0.454726);
    u(0.16, 0.313845, 0.687097, -0.254627, 0.456774);
    u(0.46, 0.240781, 0.832824, -0.229445, 0.528375);
    u(0.48, 0.236215, 0.84347, -0.227203, 0.536253);
    u(0.50, 0.231694, 0.854277, -0.224911, 0.544573);
    u(0.52, 0.227219, 0.865255, -0.22257, 0.553342);
    u(0.54, 0.222791, 0.876414, -0.220185, 0.562573);
    u(0.56, 0.218412, 0.887762, -0.217759, 0.572277);
    u(0.58, 0.214081, 0.899308, -0.215294, 0.582463);
    u(0.60, 0.2098, 0.911063, -0.212793, 0.593144);
    u(0.88, 0.155369, 1.10363, -0.175498, 0.802115);
    u(0.90, 0.151887, 1.11987, -0.172764, 0.821904);
    u(0.92, 0.148459, 1.13651, -0.170031, 0.842437);
    u(0.94, 0.145086, 1.15358, -0.167301, 0.863735);
    u(0.96, 0.141767, 1.17107, -0.164576, 0.885819);
    u(0.98, 0.138502, 1.18901, -0.161858, 0.908711);
    u(1.18, 0.108807, 1.39705, -0.135343, 1.1877);
    u(1.20, 0.106126, 1.42113, -0.132785, 1.22123);
    u(1.22, 0.103495, 1.4459, -0.130249, 1.25592);
    u(1.24, 0.100916, 1.47138, -0.127735, 1.2918);
    u(1.26, 0.0983859, 1.49758, -0.125244, 1.32892);
    u(1.28, 0.0959057, 1.52454, -0.122777, 1.3673);
    u(1.30, 0.0934747, 1.55228, -0.120334, 1.40699);
    u(1.32, 0.0910922, 1.58083, -0.117916, 1.44803);
    u(1.58, 0.0642969, 2.03927, -0.0890124, 2.12746);
    u(1.60, 0.0625369, 2.08247, -0.0869959, 2.193);
    u(1.62, 0.0608169, 2.12701, -0.0850101, 2.26077);
    u(1.64, 0.0591363, 2.17292, -0.083055, 2.33085);
    u(1.66, 0.0574945, 2.22026, -0.0811308, 2.40334);
    u(1.68, 0.0558909, 2.26907, -0.0792374, 2.47831);
    u(1.70, 0.0543248, 2.31941, -0.0773749, 2.55585);
    u(1.72, 0.0527956, 2.37132, -0.0755433, 2.63606);
    u(1.74, 0.0513028, 2.42487, -0.0737425, 2.71903);
    u(1.96, 0.0371044, 3.13922, -0.0559417, 3.84581);
    u(1.98, 0.036, 3.21739, -0.0545017, 3.97103);
    u(2.00, 0.0349241, 3.29809, -0.0530904, 4.10068);
    u(2.02, 0.0338762, 3.38144, -0.0517076, 4.23493);
    u(2.04, 0.0328556, 3.46752, -0.0503531, 4.37396);
    u(2.06, 0.0318619, 3.55643, -0.0490265, 4.51795);
    u(2.08, 0.0308944, 3.64828, -0.0477276, 4.66708);
    u(2.10, 0.0299526, 3.74315, -0.046456, 4.82155);
    u(2.36, 0.0198099, 5.30862, -0.032265, 7.42191);
    u(2.38, 0.0191739, 5.4596, -0.0313412, 7.6771);
    u(2.40, 0.0185561, 5.61577, -0.0304395, 7.94179);
    u(2.42, 0.0179561, 5.77734, -0.0295597, 8.21634);
    u(2.44, 0.0173736, 5.94449, -0.0287012, 8.50117);
    u(2.46, 0.0168079, 6.11745, -0.0278639, 8.79667);
    u(2.48, 0.0162589, 6.29643, -0.0270472, 9.10327);
    u(2.72, 0.010818, 9.00619, -0.018729, 13.8319);
    u(2.74, 0.0104493, 9.28779, -0.0181484, 14.3312);
    u(2.76, 0.010092, 9.57957, -0.0175836, 14.8501);
    u(2.78, 0.00974582, 9.88192, -0.0170342, 15.3891);
    u(2.80, 0.00941051, 10.1953, -0.0164998, 15.9492);
    u(2.82, 0.00908573, 10.52, -0.0159801, 16.5313);
    u(2.84, 0.00877121, 10.8567, -0.0154748, 17.1362);
    u(2.86, 0.00846665, 11.2056, -0.0149836, 17.7649);
    u(2.88, 0.00817177, 11.5674, -0.0145061, 18.4185);
    u(2.90, 0.00788631, 11.9426, -0.0140421, 19.0978);
    u(2.92, 0.00761, 12.3315, -0.0135912, 19.8042);
    u(2.94, 0.00734258, 12.7349, -0.0131531, 20.5385);
    u(2.96, 0.00708379, 13.1533, -0.0127276, 21.3022);
    u(2.98, 0.00683339, 13.5872, -0.0123143, 22.0963);
    u(3.00, 0.00659114, 14.0373, -0.011913, 22.9222);
    u(3.02, 0.0063568, 14.5043, -0.0115233, 23.7812);
    u(3.04, 0.00613013, 14.9888, -0.011145, 24.6748);
    u(3.06, 0.00591092, 15.4915, -0.0107778, 25.6044);
    u(3.32, 0.00364691, 24.0679, -0.00689645, 41.7687);
    u(3.34, 0.00351138, 24.9195, -0.00665811, 43.3998);
    u(3.36, 0.00338054, 25.8043, -0.00642726, 45.0989);
    u(3.38, 0.00325424, 26.7239, -0.00620369, 46.869);
    u(3.40, 0.00313234, 27.6796, -0.00598722, 48.7131);
    u(3.42, 0.00301471, 28.673, -0.00577763, 50.6345);
    u(3.44, 0.00290119, 29.7055, -0.00557475, 52.6367);
    u(3.74, 0.00161194, 51.2212, -0.00321728, 95.237);
    u(3.76, 0.00154879, 53.1648, -0.00309877, 99.151);
    u(3.78, 0.00148797, 55.1884, -0.0029843, 103.235);
    u(3.80, 0.00142939, 57.2954, -0.00287375, 107.498);
    u(4.14, 0.000711682, 110.167, -0.0014883, 216.879);
    u(4.16, 0.000682498, 114.597, -0.00143045, 226.206);
    u(4.42, 0.000392692, 193.144, -0.0008465, 394.236);
    u(4.44, 0.000376105, 201.202, -0.000812448, 411.703);
    u(4.46, 0.000360185, 209.618, -0.000779688, 429.983);
    u(4.48, 0.000344909, 218.407, -0.000748176, 449.113);
    u(4.78, 0.000178123, 409.29, -0.000398258, 871.909);
    u(4.80, 0.000170325, 427.126, -0.00038157, 911.967);
    u(4.82, 0.000162855, 445.782, -0.000365547, 953.948);
    u(4.84, 0.000155699, 465.297, -0.000350164, 997.947);
    u(4.86, 0.000148845, 485.714, -0.000335396, 1044.06);
    u(4.88, 0.00014228, 507.074, -0.000321221, 1092.4);
    u(4.90, 0.000135992, 529.426, -0.000307616, 1143.08);
    u(4.92, 0.000129971, 552.814, -0.00029456, 1196.21);
    u(4.96, 0.000118687, 602.909, -0.00027001, 1310.33);
    u(4.98, 0.000113403, 629.723, -0.000258477, 1371.58);
    u(5.00, 0.000108344, 657.792, -0.000247414, 1435.82);
    u(9.00, 0, 2.147286889143535E7, 0, 6.380748978090821E7);
  }

  public void testSum() {
    final double[] r = new double[4];
    for (double x = 8; x < 10; x += 0.3) {
      final double[] q = airy(x);
      r[0] += q[0];
      r[1] += q[1];
      r[2] += q[2];
      r[3] += q[3];
    }
    assertEqualsLocal(8.028405968760894E-8, r[0], 1E-16);
    assertEqualsLocal(-2.3234610614243962E-7, r[1], 1E-16);
    assertEqualsLocal(4.0662473057609105E8, r[2], 1);
    assertEqualsLocal(1.248897915128035E9, r[3], 1);
  }

  public void testSum2() {
    final double[] r = new double[4];
    for (double x = 2; x < 9; x += 0.3) {
      final double[] q = airy(x);
      r[0] += q[0];
      r[1] += q[1];
      r[2] += q[2];
      r[3] += q[3];
    }
    assertEqualsLocal(0.08812190366121782, r[0], 1E-12);
    assertEqualsLocal(-0.1447038856207317, r[1], 1E-12);
    assertEqualsLocal(2.7545837089713357E7, r[2], 0.0001);
    assertEqualsLocal(8.031038259626035E7, r[3], 0.0001);
  }

  public void testSumNegative() {
    final double[] r = new double[4];
    for (double x = -8; x < -1.5; x += 0.3) {
      final double[] q = airy(x);
      r[0] += q[0];
      r[1] += q[1];
      r[2] += q[2];
      r[3] += q[3];
    }
    assertEqualsLocal(0.07514178888126632, r[0], 1E-8);
    assertEqualsLocal(2.134695489457101, r[1], 1E-8);
    assertEqualsLocal(-1.3512976925459799, r[2], 1E-8);
    assertEqualsLocal(0.22214789810187768, r[3], 1E-8);
  }

  public void testNearInfinite() {
    final double[] r = airy(103.892);
    assertEqualsLocal(1, 2.240778287387011E-308 / r[0], 1E-8);
    assertEqualsLocal(1, -2.2845065026831452E-307 / r[1], 1E-8);
    assertEqualsLocal(1, 6.968354736681834E305 / r[2], 1E-8);
    assertEqualsLocal(1, 7.100986741522436E306 / r[3], 1E-8);
  }
}
