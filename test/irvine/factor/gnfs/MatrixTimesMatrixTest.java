package irvine.factor.gnfs;

import java.util.Arrays;
import java.util.Random;

import junit.framework.TestCase;

/**
 * Tests the corresponding class.
 * @author Sean A. Irvine
 */
public class MatrixTimesMatrixTest extends TestCase {

  public void testMultiplyMatrix() {
    final long[] m = new long[64];
    final long[] m1 = new long[64];
    final long[] m2 = new long[64];
    final Random r = new Random(42);
    for (int i = 0; i < 64; ++i) {
      m[i] = r.nextLong();
    }
    for (int i = 0; i < 64; ++i) {
      m1[i] = r.nextLong();
    }
    MatrixTimesMatrix.multiplyMatrix(m1, m, m2);
    assertEquals("[-4698486427190943366, -419626685923094869, 8919085753710469540, -1746985419944142679, 4204795217201711935, 134933083989198302, 4605553943411157205, -6022478824887701659, 2575922427450172875, 1999090379467866234, 6333939591354445934, -39599396512522206, 6916682531631936937, 327732739796928736, 8375595948828828186, 2869205797661198773, 6686053449545896713, -8821296015257168255, -3090413006232271703, -2768883861886595446, 5018245926651973520, 8256250957645627043, -5090257958499350775, 342295874661655523, 3744109678809252798, -5937247731043649736, -339886753412103852, -4219077851891312435, 8878440296592735731, 8092520334006770567, 3869625621428961411, -6822153733309803141, -992662359271348791, 2847325117339559503, 8209210687915109526, -140921645024637522, -4351793870527203402, -3283714995928751290, 8689903249006573086, -6089771208516096275, -3683498552414820383, -4745713257909339756, -9153482186341838058, 7235641330957212333, 5879691971710145829, 5155607541853977180, -8314921733515797190, 6631946243778672849, -3183767524183538227, 7517629198417045785, -826395014216473438, -4127600186866963754, -8571489715084821448, 9107019351822157093, 8150913420117898835, 8733018348031978909, 5468770176444584540, -86650275831698308, 7481374042918747998, 20094367737870116, -4285049877947751329, 5350935218507951721, -370423572123633810, 9075567757874019294]", Arrays.toString(m2));
  }

  public void testMultiplyMatrixTranspose() {
    final long[] m = new long[64];
    final long[] m1 = new long[64];
    final long[] m2 = new long[64];
    final Random r = new Random(42);
    for (int i = 0; i < 64; ++i) {
      m[i] = r.nextLong();
    }
    for (int i = 0; i < 64; ++i) {
      m1[i] = r.nextLong();
    }
    MatrixTimesMatrix.multiplyMatrixTMatrix(m1, m, m2);
    assertEquals("[944009492960433277, -3992611079851085476, 3519434348722391911, -2863741713744682409, -5729638356199659242, -282873095023142219, -1897321553652461091, -7988323533917725825, 4772351771118860439, -5665798276678360070, -3987689534940564877, -5191082791960565807, 8512866202185153720, 7366660046331929294, 7996155738394518354, 6034184606750202425, 1624376936389312568, 1114414979177286614, 6495784421098251473, 126868140540129689, -478036558726069486, 2097257990774317505, 858659567257292445, 5243555166943544854, 6482164684260720939, -7752288954550351992, -6402343492518571215, -1207862140231526772, 3411523589053342833, -1615562670027757422, -110712939644202624, -7966659134929653456, 5525876801364491866, 1947942023749600981, 4787007886107934360, -1749354640940963892, 3815496036581389434, -6912244494295964605, 8972500202341743460, 2712269296533919975, 7434376226494099615, -3895262295934673609, -632678600566848915, 5707625449939618825, -5852903908082548119, 6973709438521860996, -5803519080807737664, -7899493826738272085, -3933432588621406441, -1279199477310195690, 8543858282831208285, -366394373844354426, 5836246154146292279, 5248630176146079629, -864378396285616960, 6227379958078489282, 8217053375550202402, -3607159366374417453, 2787241346100617096, -5012733923931243119, 1255080887890265290, -3838894701863354633, 5157949228849183617, -4115575339108584805]", Arrays.toString(m2));
  }
}
