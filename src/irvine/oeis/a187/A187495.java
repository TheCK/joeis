package irvine.oeis.a187;
// Generated by gen_linrec.pl - DO NOT EDIT here!

import irvine.oeis.LinearRecurrence;

/**
 * A187495 Let i be in <code>{1,2,3,4}</code> and let r <code>&gt;= 0</code> be an integer. Let p <code>= {p_1, p_2, p_3, p_4} = {-3,0,1,2}, n=3*r+p_i</code>, and define <code>a(-3)=1</code>. Then <code>a(n)=a(3*r+p_i)</code> gives the quantity of <code>H_(9,1,0)</code> tiles in a subdivided <code>H_(9,i,r)</code> tile after linear scaling by the factor <code>Q^r</code>, where <code>Q=sqrt(2*cos(Pi/9))</code>.
 * @author Georg Fischer
 */
public class A187495 extends LinearRecurrence {

  /** Construct the sequence. */
  public A187495() {
    super(new long[] {-1L, 0L, 0L, -2L, 0L, 0L, 3L, 0L, 0L, 1L, 0L, 0L}, new long[] {0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 0L, 2L, 0L, 1L});
  } // constructor()
} // A187495
