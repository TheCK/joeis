package irvine.oeis.a245;
// Generated by gen_seq4.pl egfu at 2021-12-06 15:00

import irvine.math.polynomial.Polynomial;
import irvine.math.q.Q;
import irvine.oeis.ExponentialGeneratingFunction;

/**
 * A245795 Number of preferential arrangements of n labeled elements when at least k=10 elements per rank are required.
 * E.g.f.: 1/(2 + x - exp(x) + x^2/2 + x^3/6 + x^4/24 + x^5/120 + x^6/720 + x^7/5040 + x^8/40320 + x^9/362880)
 * @author Georg Fischer
 */
public class A245795 extends ExponentialGeneratingFunction {

  /** Construct the sequence. */
  public A245795() {
    super(0);
  }

  @Override
  public Polynomial<Q> compute(final int mN) {
    return RING.series(RING.one(), RING.add(RING.add(RING.add(RING.add(RING.add(RING.add(RING.add(RING.add(RING.subtract(RING.add(RING.monomial(Q.TWO, 0), RING.x()), RING.exp(RING.x(), mN)), RING.series(RING.pow(RING.x(), 2, mN), RING.monomial(Q.TWO, 0), mN)), RING.series(RING.pow(RING.x(), 3, mN), RING.monomial(Q.SIX, 0), mN)), RING.series(RING.pow(RING.x(), 4, mN), RING.monomial(new Q(24), 0), mN)), RING.series(RING.pow(RING.x(), 5, mN), RING.monomial(new Q(120), 0), mN)), RING.series(RING.pow(RING.x(), 6, mN), RING.monomial(new Q(720), 0), mN)), RING.series(RING.pow(RING.x(), 7, mN), RING.monomial(new Q(5040), 0), mN)), RING.series(RING.pow(RING.x(), 8, mN), RING.monomial(new Q(40320), 0), mN)), RING.series(RING.pow(RING.x(), 9, mN), RING.monomial(new Q(362880), 0), mN)), mN);
  }
}
