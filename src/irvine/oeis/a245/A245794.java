package irvine.oeis.a245;
// Generated by gen_seq4.pl egfu at 2021-12-06 15:00

import irvine.math.polynomial.Polynomial;
import irvine.math.q.Q;
import irvine.oeis.ExponentialGeneratingFunction;

/**
 * A245794 Number of preferential arrangements of n labeled elements when at least k=9 elements per rank are required.
 * E.g.f.: 1/(2 + x - exp(x) + x^2/2 + x^3/6 + x^4/24 + x^5/120 + x^6/720 + x^7/5040 + x^8/40320)
 * @author Georg Fischer
 */
public class A245794 extends ExponentialGeneratingFunction {

  /** Construct the sequence. */
  public A245794() {
    super(0);
  }

  @Override
  public Polynomial<Q> compute(final int n) {
    return RING.series(RING.one(), RING.add(RING.add(RING.add(RING.add(RING.add(RING.add(RING.add(RING.subtract(RING.add(RING.monomial(Q.TWO, 0), RING.x()), RING.exp(RING.x(), n)), RING.series(RING.pow(RING.x(), 2, n), RING.monomial(Q.TWO, 0), n)), RING.series(RING.pow(RING.x(), 3, n), RING.monomial(Q.SIX, 0), n)), RING.series(RING.pow(RING.x(), 4, n), RING.monomial(new Q(24), 0), n)), RING.series(RING.pow(RING.x(), 5, n), RING.monomial(new Q(120), 0), n)), RING.series(RING.pow(RING.x(), 6, n), RING.monomial(new Q(720), 0), n)), RING.series(RING.pow(RING.x(), 7, n), RING.monomial(new Q(5040), 0), n)), RING.series(RING.pow(RING.x(), 8, n), RING.monomial(new Q(40320), 0), n)), n);
  }
}
