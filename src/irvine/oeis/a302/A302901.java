package irvine.oeis.a302;
// Generated by gen_seq4.pl egfu at 2021-12-04 17:50

import irvine.math.polynomial.Polynomial;
import irvine.math.q.Q;
import irvine.oeis.ExponentialGeneratingFunction;

/**
 * A302901 Number of permutations of [n] having exactly eight alternating descents.
 * E.g.f.: ((x^8 - 24*x^7 + 280*x^6 - 2352*x^5 + 15120*x^4 - 73920*x^3 + 262080*x^2 - 604800*x + 80640*sin(x) + 322560)*cos(x)^4 - x*((x^7 - 8*x^6 + 56*x^5 - 336*x^4 + 1680*x^3 - 6720*x^2 + 20160*x - 40320)*sin(x) + 123*x^7 - 1488*x^6 + 8568*x^5 - 34944*x^4 + 105840*x^3 - 228480*x^2 + 302400*x - 120960)*cos(x)^3 + ((- 124*x^8 + 2456*x^7 - 22064*x^6 + 123984*x^5 - 483840*x^4 + 1310400*x^3 - 2257920*x^2 + 1854720*x - 645120)*sin(x) - 1136*x^8 + 20088*x^7 - 157472*x^6 + 722736*x^5 - 2116800*x^4 + 3971520*x^3 - 4515840*x^2 + 3144960*x - 967680)*cos(x)^2 + ((1012*x^8 - 13808*x^7 + 81872*x^6 - 282240*x^5 + 624960*x^4 - 846720*x^3 + 564480*x^2 - 161280*x)*sin(x) + 1508*x^8 - 21472*x^7 + 129808*x^6 - 423360*x^5 + 786240*x^4 - 846720*x^3 + 564480*x^2 - 161280*x)*cos(x) + (2520*x^8 - 40592*x^7 + 286048*x^6 - 1149120*x^5 + 2862720*x^4 - 4515840*x^3 + 4515840*x^2 - 2580480*x + 645120)*sin(x) + 2520*x^8 - 40048*x^7 + 278432*x^6 - 1108800*x^5 + 2782080*x^4 - 4515840*x^3 + 4515840*x^2 - 2580480*x + 645120)/(40320*cos(x)^5 + (- 40320*sin(x) + 201600)*cos(x)^4 + (161280*sin(x) - 322560)*cos(x)^3 + (483840*sin(x) - 806400)*cos(x)^2 + (- 322560*sin(x) + 322560)*cos(x) - 645120*sin(x) + 645120)
 * @author Georg Fischer
 */
public class A302901 extends ExponentialGeneratingFunction {

  /** Construct the sequence. */
  public A302901() {
    super(9);
  }

  @Override
  public Polynomial<Q> compute(final int n) {
    return RING.series(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.add(RING.add(RING.add(RING.subtract(RING.multiply(RING.add(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.pow(RING.x(), 8, n), RING.monomial(new Q(24), 7)), RING.monomial(new Q(280), 6)), RING.monomial(new Q(2352), 5)), RING.monomial(new Q(15120), 4)), RING.monomial(new Q(73920), 3)), RING.monomial(new Q(262080), 2)), RING.monomial(new Q(604800), 1)), RING.multiply(RING.monomial(new Q(80640), 0), RING.sin(RING.x(), n), n)), RING.monomial(new Q(322560), 0)), RING.pow(RING.cos(RING.x(), n), 4, n), n), RING.multiply(RING.multiply(RING.x(), RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.multiply(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.pow(RING.x(), 7, n), RING.monomial(Q.EIGHT, 6)), RING.monomial(new Q(56), 5)), RING.monomial(new Q(336), 4)), RING.monomial(new Q(1680), 3)), RING.monomial(new Q(6720), 2)), RING.monomial(new Q(20160), 1)), RING.monomial(new Q(40320), 0)), RING.sin(RING.x(), n), n), RING.monomial(new Q(123), 7)), RING.monomial(new Q(1488), 6)), RING.monomial(new Q(8568), 5)), RING.monomial(new Q(34944), 4)), RING.monomial(new Q(105840), 3)), RING.monomial(new Q(228480), 2)), RING.monomial(new Q(302400), 1)), RING.monomial(new Q(120960), 0)), n), RING.pow(RING.cos(RING.x(), n), 3, n), n)), RING.multiply(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.multiply(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.negate(RING.monomial(new Q(124), 8)), RING.monomial(new Q(2456), 7)), RING.monomial(new Q(22064), 6)), RING.monomial(new Q(123984), 5)), RING.monomial(new Q(483840), 4)), RING.monomial(new Q(1310400), 3)), RING.monomial(new Q(2257920), 2)), RING.monomial(new Q(1854720), 1)), RING.monomial(new Q(645120), 0)), RING.sin(RING.x(), n), n), RING.monomial(new Q(1136), 8)), RING.monomial(new Q(20088), 7)), RING.monomial(new Q(157472), 6)), RING.monomial(new Q(722736), 5)), RING.monomial(new Q(2116800), 4)), RING.monomial(new Q(3971520), 3)), RING.monomial(new Q(4515840), 2)), RING.monomial(new Q(3144960), 1)), RING.monomial(new Q(967680), 0)), RING.pow(RING.cos(RING.x(), n), 2, n), n)), RING.multiply(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.multiply(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.monomial(new Q(1012), 8), RING.multiply(RING.monomial(new Q(13808), 0), RING.pow(RING.x(), 7, n), n)), RING.monomial(new Q(81872), 6)), RING.monomial(new Q(282240), 5)), RING.monomial(new Q(624960), 4)), RING.monomial(new Q(846720), 3)), RING.monomial(new Q(564480), 2)), RING.monomial(new Q(161280), 1)), RING.sin(RING.x(), n), n), RING.monomial(new Q(1508), 8)), RING.monomial(new Q(21472), 7)), RING.monomial(new Q(129808), 6)), RING.monomial(new Q(423360), 5)), RING.monomial(new Q(786240), 4)), RING.monomial(new Q(846720), 3)), RING.monomial(new Q(564480), 2)), RING.monomial(new Q(161280), 1)), RING.cos(RING.x(), n), n)), RING.multiply(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.monomial(new Q(2520), 8), RING.multiply(RING.monomial(new Q(40592), 0), RING.pow(RING.x(), 7, n), n)), RING.monomial(new Q(286048), 6)), RING.monomial(new Q(1149120), 5)), RING.monomial(new Q(2862720), 4)), RING.monomial(new Q(4515840), 3)), RING.monomial(new Q(4515840), 2)), RING.monomial(new Q(2580480), 1)), RING.monomial(new Q(645120), 0)), RING.sin(RING.x(), n), n)), RING.monomial(new Q(2520), 8)), RING.monomial(new Q(40048), 7)), RING.monomial(new Q(278432), 6)), RING.monomial(new Q(1108800), 5)), RING.monomial(new Q(2782080), 4)), RING.monomial(new Q(4515840), 3)), RING.monomial(new Q(4515840), 2)), RING.monomial(new Q(2580480), 1)), RING.monomial(new Q(645120), 0)), RING.add(RING.subtract(RING.add(RING.add(RING.add(RING.add(RING.multiply(RING.monomial(new Q(40320), 0), RING.pow(RING.cos(RING.x(), n), 5, n), n), RING.multiply(RING.add(RING.negate(RING.multiply(RING.monomial(new Q(40320), 0), RING.sin(RING.x(), n), n)), RING.monomial(new Q(201600), 0)), RING.pow(RING.cos(RING.x(), n), 4, n), n)), RING.multiply(RING.subtract(RING.multiply(RING.monomial(new Q(161280), 0), RING.sin(RING.x(), n), n), RING.monomial(new Q(322560), 0)), RING.pow(RING.cos(RING.x(), n), 3, n), n)), RING.multiply(RING.subtract(RING.multiply(RING.monomial(new Q(483840), 0), RING.sin(RING.x(), n), n), RING.monomial(new Q(806400), 0)), RING.pow(RING.cos(RING.x(), n), 2, n), n)), RING.multiply(RING.add(RING.negate(RING.multiply(RING.monomial(new Q(322560), 0), RING.sin(RING.x(), n), n)), RING.monomial(new Q(322560), 0)), RING.cos(RING.x(), n), n)), RING.multiply(RING.monomial(new Q(645120), 0), RING.sin(RING.x(), n), n)), RING.monomial(new Q(645120), 0)), n);
  }
}
