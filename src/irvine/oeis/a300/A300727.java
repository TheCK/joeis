package irvine.oeis.a300;
// Generated by gen_seq4.pl decexpr at 2021-07-16 22:36

import irvine.math.cr.CR;
import irvine.math.cr.ComputableReals;
import irvine.oeis.DecimalExpansionSequence;

/**
 * A300727 Decimal expansion of the total harmonic distortion (THD) of the sawtooth signal filtered by a 2nd-order low-pass filter.
 * Formula: sqrt(Pi*(cot(Pi/sqrt(2))*coth(Pi/sqrt(2))^2-cot(Pi/sqrt(2))^2*coth(Pi/sqrt(2))-cot(Pi/sqrt(2))-coth(Pi/sqrt(2)))/((cot(Pi/sqrt(2))^2+coth(Pi/sqrt(2))^2)*sqrt(2))+(1/3)*Pi^2-1)
 * @author Georg Fischer
 */
public class A300727 extends DecimalExpansionSequence {

  private static final ComputableReals REALS = ComputableReals.SINGLETON;

  /** Construct the sequence */
  public A300727() {
    super(0, CR.PI.multiply(REALS.cot(CR.PI.divide(CR.TWO.sqrt())).multiply(CR.PI.divide(CR.TWO.sqrt()).coth().pow(CR.TWO)).subtract(REALS.cot(CR.PI.divide(CR.TWO.sqrt())).pow(CR.TWO).multiply(CR.PI.divide(CR.TWO.sqrt()).coth())).subtract(REALS.cot(CR.PI.divide(CR.TWO.sqrt()))).subtract(CR.PI.divide(CR.TWO.sqrt()).coth())).divide(REALS.cot(CR.PI.divide(CR.TWO.sqrt())).pow(CR.TWO).add(CR.PI.divide(CR.TWO.sqrt()).coth().pow(CR.TWO)).multiply(CR.TWO.sqrt())).add(CR.ONE.divide(CR.THREE).multiply(CR.PI.pow(CR.TWO))).subtract(CR.ONE).sqrt());
  }
}
