package irvine.oeis.a124;
// Generated by gen_seq4.pl egfsi at 2021-12-01 15:37

import irvine.math.group.PolynomialRingField;
import irvine.math.q.Q;
import irvine.math.q.Rationals;
import irvine.math.z.Z;
import irvine.oeis.Sequence;

/**
 * A124211 E.g.f.: exp(-2*(exp(exp(-x/(2*x-1))-1)-1)/(-2+exp(exp(-x/(2*x-1))-1))).
 * E.g.f.: exp(-2*(exp(exp(-x/(2*x-1))-1)-1)/(-2+exp(exp(-x/(2*x-1))-1)))
 * @author Georg Fischer
 */
public class A124211 implements Sequence {

  private static final PolynomialRingField<Q> RING = new PolynomialRingField<>(Rationals.SINGLETON);
  private int mN = -1;
  private Z mF = Z.ONE;

  @Override
  public Z next() {
    if (++mN != 0) {
      mF = mF.multiply(mN);
    }
    return RING.exp(RING.subtract(RING.zero(), RING.series(RING.multiply(RING.monomial(new Q(2), 0), RING.subtract(RING.exp(RING.subtract(RING.exp(RING.subtract(RING.zero(), RING.series(RING.x(), RING.subtract(RING.monomial(new Q(2), 1), RING.one()), mN)), mN), RING.one()), mN), RING.one()), mN), RING.add(RING.subtract(RING.zero(), RING.monomial(new Q(2), 0)), RING.exp(RING.subtract(RING.exp(RING.subtract(RING.zero(), RING.series(RING.x(), RING.subtract(RING.monomial(new Q(2), 1), RING.one()), mN)), mN), RING.one()), mN)), mN)), mN).coeff(mN).multiply(mF).toZ();
  }
}
