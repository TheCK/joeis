package irvine.oeis.a105;
// Generated by gen_seq4.pl egfu at 2021-12-04 17:50

import irvine.math.polynomial.Polynomial;
import irvine.math.q.Q;
import irvine.oeis.ExponentialGeneratingFunction;

/**
 * A105796 "Stirling-Bernoulli transform" of Jacobsthal numbers.
 * E.g.f.: exp(x)*(1-exp(x))/((2-exp(x))*(1-2*exp(x)))
 * @author Georg Fischer
 */
public class A105796 extends ExponentialGeneratingFunction {

  /** Construct the sequence. */
  public A105796() {
    super(0);
  }

  @Override
  public Polynomial<Q> compute(final int n) {
    return RING.series(RING.multiply(RING.exp(RING.x(), n), RING.subtract(RING.one(), RING.exp(RING.x(), n)), n), RING.multiply(RING.subtract(RING.monomial(Q.TWO, 0), RING.exp(RING.x(), n)), RING.subtract(RING.one(), RING.multiply(RING.monomial(Q.TWO, 0), RING.exp(RING.x(), n), n)), n), n);
  }
}
