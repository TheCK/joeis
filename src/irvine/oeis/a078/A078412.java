package irvine.oeis.a078;
// Generated by gen_seq4.pl joinlr 0 0 new long[] {1L, 0L, 0L} new long[] {2L, 1L, 1L} new long[] {5L, 8L, 13L, 7L, 20L, 1L, 7L, 8L, 5L, 13L, 2L, 5L, 7L, 4L, 11L, 5L, 16L, 7L, 23L, 10L, 11L, 7L} at 2019-07-26 00:04

import irvine.oeis.LinearRecurrence;

/**
 * A078412 <code>a(0) = 5, a(1) = 8</code>; for <code>n &gt;1, a(n)=(a(n-1)+a(n-2))/3^n</code>, where <code>3^n</code> is the highest power of 3 dividing <code>a(n-1)+a(n-2)</code>.
 * @author Georg Fischer
 */
public class A078412 extends LinearRecurrence {

  /** Construct the sequence. */
  public A078412() {
    super(new long[] {1L, 0L, 0L}, new long[] {2L, 1L, 1L}, new long[] {5L, 8L, 13L, 7L, 20L, 1L, 7L, 8L, 5L, 13L, 2L, 5L, 7L, 4L, 11L, 5L, 16L, 7L, 23L, 10L, 11L, 7L});
  }
}
