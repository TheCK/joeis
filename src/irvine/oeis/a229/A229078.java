package irvine.oeis.a229;
// Generated by gen_seq4.pl egfu at 2021-12-07 21:31

import irvine.math.polynomial.Polynomial;
import irvine.math.q.Q;
import irvine.oeis.ExponentialGeneratingFunction;

/**
 * A229078 Number of ascending runs in {1,...,n}^n.
 * E.g.f.: <code>1/2*lambertw(-x)*(lambertw(-x)^3+lambertw(-x)^2-lambertw(-x)-2)/(1+lambertw(-x))^3</code>
 * @author Georg Fischer
 */
public class A229078 extends ExponentialGeneratingFunction {

  /** Construct the sequence. */
  public A229078() {
    super(0);
  }

  @Override
  public Polynomial<Q> compute(final int n) {
    return RING.series(RING.multiply(RING.multiply(RING.series(RING.one(), RING.monomial(Q.TWO, 0), n), RING.lambertW(RING.negate(RING.x()), n), n), RING.subtract(RING.subtract(RING.add(RING.pow(RING.lambertW(RING.negate(RING.x()), n), 3, n), RING.pow(RING.lambertW(RING.negate(RING.x()), n), 2, n)), RING.lambertW(RING.negate(RING.x()), n)), RING.monomial(Q.TWO, 0)), n), RING.pow(RING.add(RING.one(), RING.lambertW(RING.negate(RING.x()), n)), 3, n), n);
  }
}
