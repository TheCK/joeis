package irvine.oeis.a043;
// Generated by gen_seq4.pl juxdig12b 1 2 5 add at 2019-06-29 14:09
// DO NOT EDIT here!

import irvine.math.z.Z;
import irvine.oeis.Sequence;

/**
 * A043890 Numbers n such that 1 and 2 occur juxtaposed in the base 5 representation of n but not of <code>n+1</code>.
 * @author Georg Fischer
 */
public class A043890 implements Sequence {

  private int mN = 1;
  private Z mK = Z.ZERO;
  private String mP12 = String.valueOf(1) + String.valueOf(2);
  private String mP21 = String.valueOf(2) + String.valueOf(1);

  @Override
  public Z next() {
    int loopCheck = 1000000;
    while (loopCheck > 0) {
      mK = mK.add(Z.ONE);
      final String sta = mK.toString(5);
      final String stb = mK.add(Z.ONE).toString(5);
      if ((sta.indexOf(mP12) >= 0 || sta.indexOf(mP21) >= 0) && 
          (stb.indexOf(mP12) < 0  && stb.indexOf(mP21) < 0)) { // isOk
        --loopCheck;
      }
      --loopCheck;
    } // while busy
    ++mN;
    if (loopCheck == 0) {
      throw new IllegalArgumentException("more than 10^6 iterations in A043890");
    }
    return mK;
  }
}
