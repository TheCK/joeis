package irvine.oeis.a108;
// Generated by gen_seq4.pl egfu at 2021-12-07 21:31

import irvine.math.polynomial.Polynomial;
import irvine.math.q.Q;
import irvine.oeis.ExponentialGeneratingFunction;

/**
 * A108525 Number of increasing ordered rooted trees with n generators.
 * E.g.f.: reverse((log(1-x)+7*log(1+x)+2/(x-1))/4+1/2)
 * @author Georg Fischer
 */
public class A108525 extends ExponentialGeneratingFunction {

  /** Construct the sequence. */
  public A108525() {
    super(1);
  }

  @Override
  public Polynomial<Q> compute(final int n) {
    return RING.reversion(RING.add(RING.series(RING.add(RING.add(RING.log(RING.oneMinusXToTheN(1), n), RING.multiply(RING.monomial(Q.SEVEN, 0), RING.log(RING.onePlusXToTheN(1), n), n)), RING.series(RING.monomial(Q.TWO, 0), RING.subtract(RING.x(), RING.one()), n)), RING.monomial(Q.FOUR, 0), n), RING.series(RING.one(), RING.monomial(Q.TWO, 0), n)), n);
  }
}
