package irvine.oeis.a190;
// Generated by gen_seq4.pl floorr at 2021-08-24 07:13

import irvine.math.cr.CR;
import irvine.math.cr.ComputableReals;
import irvine.math.z.Z;
import irvine.oeis.FloorSequence;

/**
 * A190739 a(n) = n + [ns/r] + [nt/r] + [nu/r] + [nv/r] + [nw/r], where r=sin(x), s=cos(x), t=tan(x), u=csc(x), v=sec(x), w=cot(x), x=Pi/8.
 * @author Georg Fischer
 */
public class A190739 extends FloorSequence {

  private static final ComputableReals REALS = ComputableReals.SINGLETON;
  private final CR mR = CR.ONE.divide(CR.EIGHT).multiply(CR.PI).sin();
  private final CR mS = CR.ONE.divide(CR.EIGHT).multiply(CR.PI).cos();
  private final CR mT = REALS.tan(CR.ONE.divide(CR.EIGHT).multiply(CR.PI));
  private final CR mU = CR.ONE.divide(CR.ONE.divide(CR.EIGHT).multiply(CR.PI).sin());
  private final CR mV = CR.ONE.divide(CR.ONE.divide(CR.EIGHT).multiply(CR.PI).cos());
  private final CR mW = REALS.cot(CR.ONE.divide(CR.EIGHT).multiply(CR.PI));

  /** Construct the sequence */
  public A190739() {
    super(1);
  }

  protected Z evalCR(final long mN) {
    return Z.valueOf(mN).add(CR.valueOf(mN).multiply(mS).divide(mR).floor()).add(CR.valueOf(mN).multiply(mT).divide(mR).floor()).add(CR.valueOf(mN).multiply(mU).divide(mR).floor()).add(CR.valueOf(mN).multiply(mV).divide(mR).floor()).add(CR.valueOf(mN).multiply(mW).divide(mR).floor());
  }

}
