package irvine.oeis.a281;
// Generated by gen_seq4.pl egfu at 2021-12-06 15:00

import irvine.math.polynomial.Polynomial;
import irvine.math.q.Q;
import irvine.oeis.ExponentialGeneratingFunction;

/**
 * A281182 E.g.f. C(x) + S(x) = exp( Integral C(x)^3 dx ) where C(x) and S(x) are described by A281181 and A281180, respectively.
 * E.g.f.: exp( reverse( ( sinh(x)/cosh(x)^2 + atan(sinh(x)) )/2 ) )
 * @author Georg Fischer
 */
public class A281182 extends ExponentialGeneratingFunction {

  /** Construct the sequence. */
  public A281182() {
    super(0);
  }

  @Override
  public Polynomial<Q> compute(final int n) {
    return RING.exp(RING.reversion(RING.series(RING.add(RING.series(RING.sinh(RING.x(), n), RING.pow(RING.cosh(RING.x(), n), 2, n), n), RING.atan(RING.sinh(RING.x(), n), n)), RING.monomial(Q.TWO, 0), n), n), n);
  }
}
