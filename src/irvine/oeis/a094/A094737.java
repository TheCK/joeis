package irvine.oeis.a094;
// Generated by gen_seq4.pl egfu at 2021-12-06 15:00

import irvine.math.polynomial.Polynomial;
import irvine.math.q.Q;
import irvine.oeis.ExponentialGeneratingFunction;

/**
 * A094737 Number of connected 5-element multiantichains on a labeled n-set.
 * E.g.f.: (1/120)*(exp(31*x) -20*exp(23*x) +60*exp(19*x) +20*exp(17*x) +5*exp(16*x) -85*exp(15*x) -120*exp(14*x) +150*exp(13*x) +180*exp(12*x) -540*exp(11*x) -110*exp(10*x) +860*exp(9*x) +160*exp(8*x) -735*exp(7*x) +1110*exp(6*x) -2106*exp(5*x) -1095*exp(4*x) +6665*exp(3*x) -7090*exp(2*x) +3434*exp(x)-744)
 * @author Georg Fischer
 */
public class A094737 extends ExponentialGeneratingFunction {

  /** Construct the sequence. */
  public A094737() {
    super(0);
  }

  @Override
  public Polynomial<Q> compute(final int mN) {
    return RING.multiply(RING.series(RING.one(), RING.monomial(new Q(120), 0), mN), RING.subtract(RING.add(RING.subtract(RING.add(RING.subtract(RING.subtract(RING.add(RING.subtract(RING.add(RING.add(RING.subtract(RING.subtract(RING.add(RING.add(RING.subtract(RING.subtract(RING.add(RING.add(RING.add(RING.subtract(RING.exp(RING.monomial(new Q(31), 1), mN), RING.multiply(RING.monomial(new Q(20), 0), RING.exp(RING.monomial(new Q(23), 1), mN), mN)), RING.multiply(RING.monomial(new Q(60), 0), RING.exp(RING.monomial(new Q(19), 1), mN), mN)), RING.multiply(RING.monomial(new Q(20), 0), RING.exp(RING.monomial(new Q(17), 1), mN), mN)), RING.multiply(RING.monomial(new Q(5), 0), RING.exp(RING.monomial(new Q(16), 1), mN), mN)), RING.multiply(RING.monomial(new Q(85), 0), RING.exp(RING.monomial(new Q(15), 1), mN), mN)), RING.multiply(RING.monomial(new Q(120), 0), RING.exp(RING.monomial(new Q(14), 1), mN), mN)), RING.multiply(RING.monomial(new Q(150), 0), RING.exp(RING.monomial(new Q(13), 1), mN), mN)), RING.multiply(RING.monomial(new Q(180), 0), RING.exp(RING.monomial(new Q(12), 1), mN), mN)), RING.multiply(RING.monomial(new Q(540), 0), RING.exp(RING.monomial(new Q(11), 1), mN), mN)), RING.multiply(RING.monomial(new Q(110), 0), RING.exp(RING.monomial(new Q(10), 1), mN), mN)), RING.multiply(RING.monomial(new Q(860), 0), RING.exp(RING.monomial(new Q(9), 1), mN), mN)), RING.multiply(RING.monomial(new Q(160), 0), RING.exp(RING.monomial(new Q(8), 1), mN), mN)), RING.multiply(RING.monomial(new Q(735), 0), RING.exp(RING.monomial(new Q(7), 1), mN), mN)), RING.multiply(RING.monomial(new Q(1110), 0), RING.exp(RING.monomial(new Q(6), 1), mN), mN)), RING.multiply(RING.monomial(new Q(2106), 0), RING.exp(RING.monomial(new Q(5), 1), mN), mN)), RING.multiply(RING.monomial(new Q(1095), 0), RING.exp(RING.monomial(new Q(4), 1), mN), mN)), RING.multiply(RING.monomial(new Q(6665), 0), RING.exp(RING.monomial(new Q(3), 1), mN), mN)), RING.multiply(RING.monomial(new Q(7090), 0), RING.exp(RING.monomial(new Q(2), 1), mN), mN)), RING.multiply(RING.monomial(new Q(3434), 0), RING.exp(RING.x(), mN), mN)), RING.monomial(new Q(744), 0)), mN);
  }
}
