package irvine.oeis.a061;
// Generated by gen_seq4.pl egfsi at 2021-12-01 15:37

import irvine.math.group.PolynomialRingField;
import irvine.math.q.Q;
import irvine.math.q.Rationals;
import irvine.math.z.Z;
import irvine.oeis.Sequence;

/**
 * A061126 Number of degree-n permutations of order exactly 16.
 * E.g.f.: - exp(x + 1/2*x^2 + 1/4*x^4 + 1/8*x^8) + exp(x + 1/2*x^2 + 1/4*x^4 + 1/8*x^8 + 1/16*x^16)
 * @author Georg Fischer
 */
public class A061126 implements Sequence {

  private static final PolynomialRingField<Q> RING = new PolynomialRingField<>(Rationals.SINGLETON);
  private int mN = 0;
  private Z mF = Z.ONE;

  @Override
  public Z next() {
    if (++mN != 0) {
      mF = mF.multiply(mN);
    }
    return RING.add(RING.subtract(RING.zero(), RING.exp(RING.add(RING.add(RING.add(RING.x(), RING.multiply(RING.series(RING.one(), RING.monomial(new Q(2), 0), mN), RING.pow(RING.x(), 2, mN), mN)), RING.multiply(RING.series(RING.one(), RING.monomial(new Q(4), 0), mN), RING.pow(RING.x(), 4, mN), mN)), RING.multiply(RING.series(RING.one(), RING.monomial(new Q(8), 0), mN), RING.pow(RING.x(), 8, mN), mN)), mN)), RING.exp(RING.add(RING.add(RING.add(RING.add(RING.x(), RING.multiply(RING.series(RING.one(), RING.monomial(new Q(2), 0), mN), RING.pow(RING.x(), 2, mN), mN)), RING.multiply(RING.series(RING.one(), RING.monomial(new Q(4), 0), mN), RING.pow(RING.x(), 4, mN), mN)), RING.multiply(RING.series(RING.one(), RING.monomial(new Q(8), 0), mN), RING.pow(RING.x(), 8, mN), mN)), RING.multiply(RING.series(RING.one(), RING.monomial(new Q(16), 0), mN), RING.pow(RING.x(), 16, mN), mN)), mN)).coeff(mN).multiply(mF).toZ();
  }
}
